#nop ----------------------------------------- 
#nop  Common tintin scripts (mud independent)
#nop -----------------------------------------
#class lib kill
#class lib open

#nop -----------------------------------------
#nop tinframe help
#nop -----------------------------------------
#nop << What's expected of caller: (doc)
#nop - caller is called 'main.tt' (for reloader macro F12)
#nop - caller's dir has subdirs 'include/', 'chars/', 'map/' and 'log/'
#nop - variables '$mudname' '$mudhost' and '$mudport' have been defined
#nop - class 'temp' opened at the end of caller's script
#nop - optionally: non-empty 'onconnect', 'onquit', 'prequit' and/or 'ontimeout' aliases have been defined
#nop - optionally: 'loginsequence' alias has been overridden
#nop >>
#nop << What caller can expect from common.tt: (doc)
#nop - alias 'classinclude' to include files in include/
#nop - alias 'classincludefrom' to include files from other dirs
#nop - macro key <F12> to reload all scripts
#nop - macro key <F9> to connect to mud (with 'loglog' of connection)
#nop - function 'colscale{foo;bar}' for color based on foo/bar interpreted as a %
#nop - function 'colpercent{foo;bar}' gives back foo/bar written as percentage with adequate color
#nop and from included loglib.tt:
#nop - aliases 'chatlog' and 'loglog' for standard logs, 'statlog' and 'maplog' for other windows
#nop - alias 'log [on|off|filename]' to start/stop logging to dated file in log/
#nop and from included sessionlib.tt:
#nop - alias 'loginas' to login using a character defined on a chars/ .tt file and recall information about it
#nop - aliases 'memchar', 'memalso', 'recallchar' for use in 'onconnect' and 'onquit'
#nop - caller-overrideable 'onconnect', 'prequit', 'onquit', 'ontimeout' are called when connecting / disconnecting
#nop and from included maplib.tt:
#nop - aliases 'newmap', 'loadmap', 'savemap', 'closemap' (also saves), 'tossmap' (doesn't save), redrawmap
#nop - automatic 'closemap' in 'quit' (before sending 'quit' to the mud)
#nop - alias 'goto <dest>' and macro <F1> : set destination and walk there
#nop - aliases 'mapsymbol', 'mapexit', 'mapname'
#nop and from included statuslib.tt:
#nop >>
#alias tfhelp { #nop <<;
  #if { "%1" == "" } {
    #echo {--- TinFrame help --- };
    #echo {topics available: (tfhelp <topic> or <topic>help) };
    #echo {* key     * keybindings from TinFrame};
    #echo {* session * login / quit handling };
    #echo {* log     * log files in TinFrame};
    #echo {* status  * status pane handling};
    #echo {* map     * map handling};
  };
  #else {
    %1help;
  }
}
#nop >>;
#alias keyhelp { #nop << key bindings from all tinframe files;
    #echo {--- TinFrame key bindings --- };
    #echo { F5   - connect to mud};
    #echo { F12  - reload scripts};
    #echo { Num/ - toggle numpad real movement / moving on map only};
    #echo { Num# - move along a cardinal direction};
    #echo { Num+ - move up};
    #echo { Num- - move down};
    #echo { Num* - walk along set path (from 'goto' alias)};
};
#nop >>;

#nop -----------------------------------------
#nop aspects of tinframe not worthy of a separate class file
#nop -----------------------------------------
#nop << base config: color patch, unicode
#config {color patch} {on};

#nop make sure text is handled as Unicode by the client;
#nop (may need setup server-side too);
#config {charset} {utf-8};

#nop try to fight the garbled text bug from some muds;
#nop #config {packet patch} {0.5}; #nop <- should be set on a per mud basis
#nop >>
#nop << function key macros - <F12>:reload scripts and <F9>:connect to mud;
#nop reload all scripts with F12 (saving temp stuff);
#macro {\e[24~} {
  #echo {** Start reloading scripts **};
  #class temp write temp.tt;
  #class main kill;
  #read  main.tt;
  #echo {** Done reloading scripts **};
};

#nop  log in  with F9
#macro {\e[20~} {#ses $mudname $mudhost $mudport};
#nop >>
#nop << '@colscale{foo;bar}' gives color based on foo/bar interpreted as a % (from TinTin++ website examples)
#function {colscale} {
  #switch {10 * %1 / %2} {
    #case {0} {#return <faa>};
    #case {1} {#return <fba>};
    #case {2} {#return <fca>};
    #case {3} {#return <fda>};
    #case {4} {#return <fea>};
    #case {5} {#return <ffa>};
    #case {6} {#return <efa>};
    #case {7} {#return <dfa>};
    #case {8} {#return <cfa>};
    #case {9} {#return <bfa>};
    #default  {#return <afa>}
  }
} 
#nop >>
#nop << '@colpercent{foo;bar}' gives back foo/bar written as percentage with adequate color (spinoff variant of the above)
#function {colpercent} {
  #math temp {%1* 100 / %2};
  #return @colscale{%1;%2}$temp<099>%;
}
#nop >>

#nop -----------------------------------------
#nop  Include other tintin class files
#nop -----------------------------------------
#nop << aliases 'classinclude', 'classincludefrom' and 'libinclude';
#alias classinclude     {#class %1 kill; #class %1 read include/%1.tt};
#alias classincludefrom {#class %1 kill; #class %1 read %1.tt};
#alias subclassinclude  {#class %2 kill; #class %2 read %1/%2.tt};
#alias libinclude       {#class %1 kill; #class %1 read $libdir/%1.tt};
#nop >>
#nop << include library classes
libinclude sessionlib;
libinclude loglib;
libinclude statuslib;
libinclude maplib;
#echo {classes lib, stdlib, maplib and statuslib (re)loaded};
#nop >>
#nop << (re)load local include classes as well as char and map classes, if any;
#script {localincludes} {cd include; ls *.tt | sed -e "s/.tt$//"};
#var included {};
#foreach $localincludes[] index {
  classinclude $localincludes[$index];
  #var included {$included $localincludes[$index]};
};
#echo {included local classes: $included};
#unvar localincludes;
#unvar index;
#unvar included;

#nop (re)load character's class file, if any;
#if {&char} { 
  subclassinclude {chars} {$char};
} {
  #echo {no char defined yet};
};

#nop (re)load map class file, if any;
#if { &mclfile } {
  #script {temp} { ls $mclfile 2> /dev/null };
  #if {"$temp[1]" != ""} {
     classincludefrom $mclfile;
  };
  #else {
    #echo {current map doesn't have an associated class};
  };
  #unvar temp;
};
#nop >>

#nop ------------------------
#nop CopyLeft by dalker
#nop create date: 2014-02-12
#nop modif  date: 2016-05-28
