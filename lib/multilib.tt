#nop ------------------------
#nop -= mutlichar handling =-
#nop ------------------------
#function sessionisgts {#if {&activesession && "$activesession" != "gts"} {#return 0} {#return 1}};

#nop -- overrideable variable --
#var logindelay .5; #nop modifiable delay to send login sequence after connecting to mud

#nop -- initialize persistent gts variables if no real session exists yet --
#if {@sessionisgts} {#if {&sessionindex} {#nop;} { #nop <<;
  #class tempmulti open;
  #list  sessions  clear;
  #list  charnames clear;
  #var   sessionindex    0;
  #var   altsessionindex 0;
  #var   bltsessionindex 0;
  #var   maxsessionindex 0;
  #class multilib open;
}}; #nop >>

#nop -- use gts to index existing sessions --
#alias gtsnewsession { #nop << gtsnewsession <name> - add to session index;
  #list sessions add %1;
  #list sessions size maxsessionindex;
  gtsactivatesession %1;
}; #nop >>
#alias gtscharname { #nop << gtscharname <session> <charname>;
  #var charnames[%1] %2;
}; #nop >>
#alias gtskillsession { #nop << called by session timeout and disconnect events;
  #var killedsession %1;
  #delay 2 { #nop leave time for gtsactivatesession to act first;
    #list sessions find $killedsession killsessionindex;
    #if {$killsessionindex > 0} {
      #list sessions  delete $killsessionindex;
      #list charnames delete $killsessionindex;
    };
    #list sessions size maxsessionindex;
    #unvar killsessionindex;
  };
}; #nop >>
#alias gtsprevsession { #nop <<;
  #if {$sessionindex == 1} {
    #var sessionindex $maxsessionindex;
  } {
    #math sessionindex {$sessionindex - 1};
  };
  #format thecommand {#%s} {$sessions[$sessionindex]};
  $thecommand;
  #unvar thecommand;
}; #nop >>
#alias gtsnextsession { #nop <<;
  #if {$sessionindex == $maxsessionindex} {
    #var sessionindex 1;
  } {
    #math sessionindex {$sessionindex + 1};
  };
  #format thecommand {#%s} {$sessions[$sessionindex]};
  $thecommand;
  #unvar thecommand;
}; #nop >>
#alias gtsactivatesession { #nop <<;
  #var activesession %1;

  #nop tell all sessions which one is active and put them all in the background (active be de-backgrounded later);
  #loop 1 $maxsessionindex i {
    #format thecommand {#%s #var activesession $activesession}  {$sessions[$i]}; $thecommand;
    #format thecommand {#%s #var inthebackground yes}           {$sessions[$i]}; $thecommand;
  };
  #unvar i;

  #nop stop any previous alt logging;
  #if {$altsessionindex > 0} {#format thecommand {#%s #log off} {$sessions[$altsessionindex]}; $thecommand};
  #if {$bltsessionindex > 0} {#format thecommand {#%s #log off} {$sessions[$bltsessionindex]}; $thecommand};

  #nop look for new active session to set up as $main;
  #list sessions find $activesession sessionindex;
  #if {$sessionindex == 0} {#echo {!! gtsactivatesession: <red>trying to activate non-indexed session %1 !!<099>}};
  #else {
    #format thecommand {#var main #%s} {$sessions[$sessionindex]}; $thecommand;
    $main #unvar inthebackground;

    #nop choose a possible 'alt' session to log into 'alt' pane, or deactive $alt in #gts and $main;
    #var altsessionindex 0;
    #if {$sessionindex != 1} { #nop there is a previous session, consider it as the 'alt' session;
      #math altsessionindex {$sessionindex - 1};
    };
    #elseif {$maxsessionindex > 1} { #nop there is a different session, so last one is considered previous from first;
      #var altsessionindex $maxsessionindex;
    };
    #if {$altsessionindex > 0} {
      #format thecommand {#var alt #%s} {$sessions[$altsessionindex]}; $thecommand;
      $main #var alt $alt;
      $alt  #log append panes/alt.txt;
    } {
      #unvar alt;
      $main #unvar alt;
    };

    #nop choose a possible 'blt' session to log into 'blt' pane, or deactive $blt in #gts, $main and $alt;
    #var bltsessionindex 0;
    #if {$sessionindex < $maxsessionindex} { #nop there is a next session, consider it as the 'blt' session;
      #math bltsessionindex {$sessionindex + 1};
    };
    #elseif {$maxsessionindex > 2} { #nop there is a different session, so first one is considered next from last;
      #var bltsessionindex 1;
    };
    #if {$bltsessionindex > 0} {
      #format thecommand {#var blt #%s} {$sessions[$bltsessionindex]}; $thecommand;
      $main #var blt $blt;
      $blt  #log append panes/blt.txt;
    } {
      #unvar blt;
      $main #unvar blt;
    };

    #unvar thecommand;
  };
}; #nop >>
#macro {\eOP} {#gts gtsprevsession}; #nop <F1>;
#macro {\eOQ} {#gts gtsnextsession}; #nop <F2>;

#nop -- start a new session, optionally followed by login --
#alias startsession { #nop << startsession <session> [char];
  #gts gtsnewsession %1; 
  #ses %1 $mudhost $mudport;
  #var sessionname %1;
  #if {"%2" != ""} {
    #var char %2;
    #delay {$logindelay} {
      loginas %2; 
      onactive;
    };
  };
}; #nop >>;
#alias ses { #nop << shortcut for startsession with name being 3 firsts characters of $char;
  #format tempsesname {%.3s} {%1};
  #if {"$tempsesname" == ""} {
    #echo {<bce>ses needs a character to login};
    showallchars;
  } {
    startsession {$tempsesname} {%1};
    #unvar tempsesname;
  };
}; #nop >>

#nop -- activate a session --
#alias onactive { #nop << standard override for multis;
  setuppanes;
  #if {"$activesession" == "gts"} {
    #echo {<bce>start multisession with: <cbf>startsession <name> [char]<099>};
    showallchars;
  };
  #nop Otherwise we're in a true session;
  #else {
    #gts gtsactivatesession $activesession;
    showstatus;
    #if {&currentmap} {redrawmap};
    #if {&name} {
      #gts gtscharname {$activesession} {$name};
      #if {&blt} {
        $alt #var bltname $name;
        $blt #var altname $name;
        $alt #echo {-- alt is $alt --};
        $blt #echo {-- blt is $blt --};
        #echo {-- active session is #$activesession with character $name, alt is $alt, blt is $blt --};
      };
      #elseif {&alt} {
        $alt #var altname $name;
        $alt #echo {-- alt is $alt --};
        #echo {-- active session is #$activesession with character $name, alt is $alt --};
      };
      #else {
        #echo {-- active session is #$activesession with character $name --};
      };
    };
  };
};#nop >>;

#nop -- show message if gts (never sessioned, or quit session and detected gts) --
#if {@sessionisgts{}} { #nop <<;
  #delay .2 {
    #echo {<bce>start session with: <cbf>ses <char><099> or <cbf>startsession <name> [char]<099>};
    showallchars;
  };
}; 
#nop >>;

#nop------------------------
#nop CopyLeft by dalker
#nop create date: 2016-07-05
#nop modif  date: 2016-07-07
